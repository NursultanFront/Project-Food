{"version":3,"sources":["webpack://project-food/./js/modules/calc.js","webpack://project-food/./js/modules/cards.js","webpack://project-food/./js/modules/forms.js","webpack://project-food/./js/modules/modals.js","webpack://project-food/./js/modules/slider.js","webpack://project-food/./js/modules/tabs.js","webpack://project-food/./js/modules/timer.js","webpack://project-food/./js/script.js","webpack://project-food/./js/services/services.js","webpack://project-food/webpack/bootstrap","webpack://project-food/webpack/runtime/define property getters","webpack://project-food/webpack/runtime/hasOwnProperty shorthand","webpack://project-food/webpack/runtime/make namespace object","webpack://project-food/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA,uEAAuE;;AAEvE,wCAAwC;;AAExC;AACA;AACA,KAAK;AACL;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA,KAAK;AACL;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;ACtI8B;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS,OAAO,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;;AAER,IAAI,8DAAU;AACd;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;AC3G4B;AACD;;AAEhD;AACA;;AAEA,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA,8DAA8D;AAC9D,gDAAgD;AAChD;AACA;AACA;AACA;AACA,kEAAkE;;AAElE,gDAAgD;;AAEhD,8BAA8B;AAC9B;AACA;AACA,aAAa;;AAEb,YAAY,4DAAQ;AACpB;AACA;AACA;AACA,qDAAqD;AACrD,2CAA2C;AAC3C,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC;AACjC,iBAAiB;AACjB,SAAS;AACT;;AAEA;AACA;AACA;AACA,yEAAyE;;AAEzE,8CAA8C;AAC9C,QAAQ,kDAAS,yBAAyB;;AAE1C,0DAA0D;AAC1D,mDAAmD;AACnD;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,kDAAkD;AAClD;AACA,YAAY,mDAAU;AACtB,SAAS;AACT;AACA;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;ACtFrB;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC,4CAA4C;;AAE5C;AACA,oCAAoC;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE;AACpE,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA,yDAAyD;AACzD;;AAEA,iEAAe,MAAM,EAAC;AACA;AACD;;;;;;;;;;;;;;;ACjErB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gCAAgC,cAAc;AAC9C,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;AClDtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD;AACzD,uEAAuE;AACvE,kEAAkE;;AAElE;AACA;AACA;AACA,uCAAuC;AACvC,kDAAkD;AAClD,SAAS;;AAET;AACA,+CAA+C;AAC/C,SAAS;AACT;AACA;AACA;AACA,qDAAqD;AACrD,gDAAgD;AAChD,2CAA2C;AAC3C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;ACnDpB;AACA;;AAEA;;AAEA;AACA;AACA,+DAA+D;AAC/D,2DAA2D;AAC3D,8DAA8D;AAC9D,yDAAyD;AACzD,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;;AC5Da;AACmB;AACjB;AACA;AACF;AACE;AACE;;AAEtC;AACA;AACA,QAAQ,0DAAS;AACjB,KAAK,QAAQ;;AAEb,IAAI,sDAAI;AACR;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAM;AACV,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,sDAAI;AACR,IAAI,uDAAK;AACT,IAAI,wDAAM;AACV,CAAC;;;;;;;;;;;;;;;;ACzBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,IAAI,WAAW,WAAW;AACrE;;AAEA,4BAA4B;AAC5B;;AAEoB;AACE;;;;;;;UC3BtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["function calc() {\r\n    // Calculator\r\n\r\n    const result = document.querySelector(\".calculating__result span\"); // Поулчаем текст вывода\r\n\r\n    let sex, height, weight, age, ratio; // Создаем переменныее\r\n\r\n    if (localStorage.getItem(\"sex\")) {\r\n        sex = localStorage.getItem(\"sex\");\r\n    } else {\r\n        sex = \"female\";\r\n        localStorage.setItem(\"sex\", \"female\"); // По умолчанию у нас sex будет female\r\n    }\r\n\r\n    if (localStorage.getItem(\"ratio\")) {\r\n        ratio = localStorage.getItem(\"ratio\");\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem(\"ratio\", 1.375); // По умолчанию у нас ratio будет 1.375\r\n    }\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            // Если у нас не введен хотя бы один из параметров то ничего не будет\r\n            result.textContent = \"____\";\r\n            return; // Останавливает функцию не позволяя идти дальше\r\n        }\r\n\r\n        // Форумла для вычисления калории можно найти в интернете\r\n        if (sex === \"female\") {\r\n            result.textContent = Math.round(\r\n                (447.6 + 9.2 * weight + 3.1 * height - 4.3 * age) * ratio\r\n            );\r\n        } else {\r\n            result.textContent = Math.round(\r\n                (88.36 + 13.4 * weight + 4.8 * height - 5.7 * age) * ratio\r\n            );\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach((elem) => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute(\"id\") === localStorage.getItem(\"sex\")) {\r\n                // Если оба значения из Local Storage совпадают то добавляем класс активности\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (\r\n                elem.getAttribute(\"data-ratio\") ===\r\n                localStorage.getItem(\"ratio\")\r\n            ) {\r\n                // Если оба значения из Local Storage совпадают то добавляем класс активности\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings(\"#gender div\", \"calculating__choose-item_active\");\r\n    initLocalSettings(\r\n        \".calculating__choose_big div\",\r\n        \"calculating__choose-item_active\"\r\n    );\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach((elem) => {\r\n            elem.addEventListener(\"click\", (e) => {\r\n                if (e.target.getAttribute(\"data-ratio\")) {\r\n                    // Если по клику в if true, то\r\n                    ratio = +e.target.getAttribute(\"data-ratio\"); // Присваеваем в переменную ratio данные из атрибута\r\n                    localStorage.setItem(\r\n                        \"ratio\",\r\n                        +e.target.getAttribute(\"data-ratio\") // Здесь устанавливаем данные для local storage\r\n                    );\r\n                } else {\r\n                    sex = e.target.getAttribute(\"id\");\r\n                    localStorage.setItem(\"sex\", e.target.getAttribute(\"id\"));\r\n                }\r\n\r\n                elements.forEach((elem) => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n\r\n                e.target.classList.add(activeClass);\r\n\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation(\"#gender div\", \"calculating__choose-item_active\");\r\n    getStaticInformation(\r\n        \".calculating__choose_big div\",\r\n        \"calculating__choose-item_active\"\r\n    );\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener(\"input\", () => {\r\n            if (input.value.match(/\\D/g)) {\r\n                // если пользователь ввел буквы то появляется красный бордер\r\n                input.style.border = \"1px solid red\";\r\n            } else {\r\n                input.style.border = \"none\";\r\n            }\r\n            switch (input.getAttribute(\"id\")) {\r\n                // Если у введенного атрибута id будет к примеру height то\r\n                case \"height\":\r\n                    height = +input.value;\r\n                    // То к переменной height прибавиться введенное значение\r\n                    break;\r\n                case \"weight\":\r\n                    weight = +input.value;\r\n                    break;\r\n                case \"age\":\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation(\"#height\");\r\n    getDynamicInformation(\"#weight\");\r\n    getDynamicInformation(\"#age\");\r\n}\r\n\r\nexport default calc;\r\n","import { getResouce } from \"../services/services\";\r\n\r\nfunction cards() {\r\n    // Исполльзуем классы для карточек\r\n\r\n    class MenuCard {\r\n        //всегда с большой буквы // Добавляем rest Оператор ...classes (Массив)\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector); //Здесь лежит DOM элемент\r\n            this.transfer = 420;\r\n            this.changeToTenge();\r\n        }\r\n        changeToTenge() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            // Cоздаем Div\r\n            const element = document.createElement(\"div\");\r\n            //Так как classes это массив, то проверяем его на length\r\n            if (this.classes.length === 0) {\r\n                this.element = \"menu__item\";\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach((className) =>\r\n                    element.classList.add(className)\r\n                );\r\n            }\r\n            // Создаем HTML структуру\r\n            element.innerHTML = ` \r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> тенге/день</div>\r\n                </div>\r\n            `;\r\n            // Добавляем этот DOM элемент в parent\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    // // Axios тоже можно получить карточки\r\n    // axios.get(\"http://localhost:3000/menu\").then((base) => {\r\n    //     base.data.forEach(({ img, altimg, title, descr, price }) => {\r\n    //         new MenuCard(\r\n    //             img,\r\n    //             altimg,\r\n    //             title,\r\n    //             descr,\r\n    //             price,\r\n    //             \".menu .container\"\r\n    //         ).render();\r\n    //     });\r\n    // });\r\n\r\n    getResouce(\"http://localhost:3000/menu\").then((data) => {\r\n        // так как к нам ответ приходит в виде массива то перебирем его, и используем деструктуризацию\r\n        data.forEach(({ img, altimg, title, descr, price }) => {\r\n            new MenuCard(\r\n                img,\r\n                altimg,\r\n                title,\r\n                descr,\r\n                price,\r\n                \".menu .container\"\r\n            ).render();\r\n        });\r\n    });\r\n\r\n    //Создаем объект который без ссылки (let div = menuCard) то есть используется один раз\r\n    // new MenuCard(\r\n    //     \"img/tabs/vegy.jpg\",\r\n    //     \"vegy\",\r\n    //     'Меню \"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     9,\r\n    //     \".menu .container\"\r\n    // ).render();\r\n\r\n    // new MenuCard(\r\n    //     \"img/tabs/post.jpg\",\r\n    //     \"post\",\r\n    //     'Меню \"Постное\"',\r\n    //     \"Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.\",\r\n    //     14,\r\n    //     \".menu .container\"\r\n    // ).render();\r\n\r\n    // new MenuCard(\r\n    //     \"img/tabs/elite.jpg\",\r\n    //     \"elite\",\r\n    //     \"Меню “Премиум”\",\r\n    //     \"В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!\",\r\n    //     21,\r\n    //     \".menu .container\"\r\n    // ).render();\r\n}\r\n\r\nexport default cards;\r\n","import { closeModal, openModal } from \"./modals\";\r\nimport { postData } from \"../services/services\";\r\n\r\nfunction forms(formsSelector, modalTimerId) {\r\n    //---------------------- Forms -----------//\r\n\r\n    const forms = document.querySelectorAll(formsSelector); // Получаем все формы\r\n\r\n    // Объект для message\r\n    const message = {\r\n        loading: \"img/forms/spinner.svg\",\r\n        success: \"Спасибо!!! Скоро мы с вами свяжемся\",\r\n        failure: \"Что то пошло не так\",\r\n    };\r\n    // Так как у нас много форм мы вызываем функцию для\r\n    forms.forEach((item) => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    // Функция которая привязывет постинг данных\r\n    function bindPostData(form) {\r\n        form.addEventListener(\"submit\", (e) => {\r\n            e.preventDefault(); // Отменяем стандартное поведение браузера(то есть не перезагружаеися)\r\n\r\n            //Когда пользователь нажимает submit, то\r\n            let statusMessage = document.createElement(\"img\"); // Создается изображение\r\n            statusMessage.src = message.loading; // Нужно обязательно атрибут src для изображении\r\n            statusMessage.style.cssText = `\r\n            display:block;\r\n            margin:0 auto;\r\n        `;\r\n            form.insertAdjacentElement(\"afterend\", statusMessage); // Метод который позволяет помещать элемент внизу form\r\n\r\n            const formData = new FormData(form); // Объект который отправляет данные из form\r\n\r\n            const object = {}; // Так как FormData не превращается в JSON формат, то мы создаем объект (object) и при помощи forEach мы заполняем его теми данными которые были в FormData\r\n            formData.forEach(function (value, key) {\r\n                object[key] = value;\r\n            });\r\n\r\n            postData(\"http://localhost:3000/requests\", JSON.stringify(object))\r\n                .then((data) => {\r\n                    // с Сервера возвращается data\r\n                    console.log(data);\r\n                    showThanksModal(message.success); //Запускается функция с надписью спасибо и все такое\r\n                    statusMessage.remove(); // Удаляем наш spinner то есть img\r\n                })\r\n                .catch(() => {\r\n                    // catch для обработки ошибки\r\n                    showThanksModal(message.failure);\r\n                })\r\n                .finally(() => {\r\n                    // Независимо от того что операция была успешно или была ошибкой он все равно сработает и\r\n                    form.reset(); // очистит форму\r\n                });\r\n        });\r\n    }\r\n\r\n    // Красивое оповещение пользователя\r\n    function showThanksModal(message) {\r\n        // Создаем функцию показа Модального окна и сюда записываем message\r\n        const prevModalDialog = document.querySelector(\".modal__dialog\"); //Получаем диалоговое модальное окно\r\n\r\n        prevModalDialog.classList.add(\"hide\"); // Затем скрываем его\r\n        openModal(\".modal\", modalTimerId); // Вызываем основное модальное окно\r\n\r\n        const thanksModal = document.createElement(\"div\"); // Создаем DIV\r\n        thanksModal.classList.add(\"modal__dialog\"); // Добвляем ему класс .modal__dialog, а потом добавляем верстку\r\n        thanksModal.innerHTML = `\r\n    <div class=\"modal__content\">\r\n        <div class=\"modal__close\" data-close>×</div>\r\n        <div class=\"modal__title\">${message}</div>\r\n    </div>\r\n    `;\r\n\r\n        document.querySelector(\".modal\").append(thanksModal);\r\n        // Что бы при повторном открытии модальное окно имело первоначальный вид мы создаем функцию\r\n        setTimeout(() => {\r\n            thanksModal.remove(); // Удаляется модальное окно которое мы создали\r\n            prevModalDialog.classList.add(\"show\"); // Добвляем класс show что бы вернуть изначальное модальное окно\r\n            prevModalDialog.classList.remove(\"hide\");\r\n            closeModal(\".modal\");\r\n        }, 5000);\r\n    }\r\n}\r\n\r\nexport default forms;\r\n","// Алгоритм: открытие модального окна и закрытие модального окна\r\n// Функция открытия\r\nfunction openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add(\"show\"); // Добавляем класс show чтобы увидеть\r\n    modal.classList.remove(\"hide\"); // Удаляем класс\r\n    document.body.style.overflow = \"hidden\"; // чтобы пропал скролл\r\n\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId); // Если мы вызывали сами это модальное окно то оно отменяет SetTimeOut\r\n    }\r\n}\r\n\r\n// Функция Закрытия\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add(\"hide\");\r\n    modal.classList.remove(\"show\");\r\n    document.body.style.overflow = \"\";\r\n}\r\n\r\nfunction modals(triggerSelector, modalSelector, modalTimerId) {\r\n    const modalTrigger = document.querySelectorAll(triggerSelector); // buttons которые вызывают модальные окна\r\n    const modal = document.querySelector(modalSelector); // само мадальное окно\r\n\r\n    //Открытие модального окна\r\n    modalTrigger.forEach((btn) => {\r\n        btn.addEventListener(\"click\", () =>\r\n            openModal(modalSelector, modalTimerId)\r\n        );\r\n    });\r\n\r\n    // modalCloseBtn.addEventListener(\"click\", closeModal);\r\n\r\n    // Здесь Модальное окно закрывается если мы нажмём вне модального окна\r\n    modal.addEventListener(\"click\", (e) => {\r\n        console.log(e);\r\n        if (e.target === modal || e.target.getAttribute(\"data-close\") === \"\") {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n    // Здесь закрывается если мы нажмем Esc и если у modal есть класс show\r\n    document.addEventListener(\"keydown\", (e) => {\r\n        if (e.code === \"Escape\" && modal.classList.contains(\"show\")) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    // Функция для показа модального окна по окончания скролла (ШАБЛОН)\r\n    function showModalByScroll() {\r\n        if (\r\n            window.pageYOffset + document.documentElement.clientHeight >=\r\n            document.documentElement.scrollHeight\r\n        ) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener(\"scroll\", showModalByScroll); // Удаляет Листенер когда один раз выполняется функция, то есть оно срабатывает один раз и все!!!\r\n        }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", showModalByScroll); // Сам Листенер для скролла\r\n}\r\n\r\nexport default modals;\r\nexport { closeModal };\r\nexport { openModal };\r\n","function slider() {\r\n    // --------------------- Slider-----------------//\r\n\r\n    let slideIndex = 1;\r\n    const slides = document.querySelectorAll(\".offer__slide\"),\r\n        prev = document.querySelector(\".offer__slider-prev\"),\r\n        next = document.querySelector(\".offer__slider-next\"),\r\n        total = document.querySelector(\"#total\"),\r\n        current = document.querySelector(\"#current\");\r\n\r\n    showSlides(slideIndex);\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n    }\r\n\r\n    function showSlides(n) {\r\n        if (n > slides.length) {\r\n            slideIndex = 1;\r\n        }\r\n        if (n < 1) {\r\n            slideIndex = slides.length;\r\n        }\r\n\r\n        slides.forEach((item) => (item.style.display = \"none\"));\r\n\r\n        slides[slideIndex - 1].style.display = \"block\";\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    function plusSlides(n) {\r\n        showSlides((slideIndex += n));\r\n    }\r\n\r\n    prev.addEventListener(\"click\", function () {\r\n        plusSlides(-1);\r\n    });\r\n\r\n    next.addEventListener(\"click\", function () {\r\n        plusSlides(1);\r\n    });\r\n}\r\n\r\nexport default slider;\r\n","function tabs(\r\n    tabsSelector,\r\n    tabsContentSelector,\r\n    tabsParentSelector,\r\n    activeClass\r\n) {\r\n    //----------------------Tabs------------------//\r\n\r\n    const tabs = document.querySelectorAll(tabsSelector); // Табы (фитнес, премиум, постное и сбалансированное)\r\n    const tabsContent = document.querySelectorAll(tabsContentSelector); // Контент табов (картинки и описание)\r\n    const tabsParent = document.querySelector(tabsParentSelector); // Родитель tabs\r\n\r\n    // Функция чтобы спрятать (очистить) табы\r\n    function hideTabContent() {\r\n        tabsContent.forEach((item) => {\r\n            item.classList.add(\"hide\"); // Добавляем класс Hide\r\n            item.classList.remove(\"show\", \"fade\"); // Удаляем класс Show\r\n        });\r\n\r\n        tabs.forEach((item) => {\r\n            item.classList.remove(activeClass); // Удаляем класс активности\r\n        });\r\n    }\r\n    // Функция чтобы показать табы\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].classList.add(\"show\", \"fade\"); // Добавляем класс Show\r\n        tabsContent[i].classList.remove(\"hide\"); // Удаляем класс hide\r\n        tabs[i].classList.add(activeClass); // добавляем класс активности (только одному)\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener(\"click\", (event) => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            console.log(target);\r\n            //Если у таргета имеется класс tabheader__item\r\n            tabs.forEach((item, i) => {\r\n                //Тогда перебираем табы\r\n                if (target == item) {\r\n                    //если таргет и item совпадают то...\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;\r\n","function timer(id, deadline) {\r\n    //---------------------- Timer ---------------//\r\n\r\n    //Шаблон для таймера\r\n\r\n    function getTimeRemainning(endtime) {\r\n        //функция получить разницу между датами!!!\r\n        const t = Date.parse(endtime) - Date.parse(new Date()); // Date.parse метод Date, смотри в интернете\r\n        const days = Math.floor(t / (1000 * 60 * 60 * 24)); // Дни считаются милисекундами,поэтому оставшиейся дни (t) мы разделяем на сколько милисекнуд в одном дне\r\n        const hours = Math.floor((t / (1000 * 60 * 60)) % 24); // %24 показывает оставшиейся время\r\n        const minutes = Math.floor((t / 1000 / 60) % 60); // опять таки как и в прошлый раз\r\n        const seconds = Math.floor((t / 1000) % 60); // опять таки как и в прошлый раз\r\n\r\n        return {\r\n            //создаем объект и возвращаем его/ по сути эта функция возвращает объект\r\n            total: t,\r\n            days: days,\r\n            hours: hours,\r\n            minutes: minutes,\r\n            seconds: seconds,\r\n        };\r\n    }\r\n\r\n    function getZero(num) {\r\n        // Функция помощник для того чтобы сделать числа в таймере двухзначными(вместо 9 дней будет 09 дней)\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector);\r\n        const days = timer.querySelector(\"#days\");\r\n        const hours = timer.querySelector(\"#hours\");\r\n        const minutes = timer.querySelector(\"#minutes\");\r\n        const seconds = timer.querySelector(\"#seconds\");\r\n        const timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock(); //чтобы когда обновляли цифры в счетчике не ждали секунду\r\n\r\n        function updateClock() {\r\n            const obj = getTimeRemainning(endtime); //отсюда получаем объект из функции\r\n\r\n            days.innerHTML = getZero(obj.days);\r\n            hours.innerHTML = getZero(obj.hours);\r\n            minutes.innerHTML = getZero(obj.minutes);\r\n            seconds.innerHTML = getZero(obj.seconds);\r\n\r\n            if (obj.total <= 0) {\r\n                //Если счетчик станет равен нулю или отрицателен, то оно прекратит функцию timeInterval\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;\r\n","import tabs from \"./modules/tabs\";\r\nimport modals, { openModal } from \"./modules/modals\";\r\nimport timer from \"./modules/timer\";\r\nimport cards from \"./modules/cards\";\r\nimport calc from \"./modules/calc\";\r\nimport forms from \"./modules/forms\";\r\nimport slider from \"./modules/slider\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n    const modalTimerId = setTimeout(function () {\r\n        openModal(\".modal\", modalTimerId);\r\n    }, 2000); // Таймер для открытия Модального Окна\r\n\r\n    tabs(\r\n        \".tabheader__item\",\r\n        \".tabcontent\",\r\n        \".tabheader__items\",\r\n        \"tabheader__item_active\"\r\n    );\r\n    modals(\"[data-modal]\", \".modal\", modalTimerId);\r\n    timer(\".timer\", \"2021-03-02\");\r\n    cards();\r\n    calc();\r\n    forms(\"form\", modalTimerId);\r\n    slider();\r\n});\r\n","// Создаем функцию для постинга данных url это адрес, а data это данные для постинга\r\nconst postData = async (url, data) => {\r\n    //внутри функции будет асинхроннйы код async\r\n    const res = await fetch(url, {\r\n        // Оператор await заставляет дождаться от fetch результата и тогда код идет дальше\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: data,\r\n    });\r\n\r\n    return await res.json(); // Возвращаем промис\r\n};\r\n\r\n// Получаем карточки с меню\r\nconst getResouce = async (url) => {\r\n    const res = await fetch(url);\r\n    if (!res.ok) {\r\n        // если будет ошибка то\r\n        throw new Error(`Could not Fetch ${url}, status ${res.status}`);\r\n    }\r\n\r\n    return await res.json(); // декодирует ответ в формате JSON,\r\n};\r\n\r\nexport { postData };\r\nexport { getResouce };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./js/script.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}